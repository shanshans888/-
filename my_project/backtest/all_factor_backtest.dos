// 五个因子生成的调仓信号合并起来
// 1. 读取数据
f_1 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl1,factor_val1 from factor_1
f_2 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl2,factor_val2 from factor_2
f_4 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl4,factor_val4 from factor_4
f_8 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl8,factor_val8 from factor_8
f_5 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl5,factor_val5 from factor_5
f_6 = select bar_endtime_flag, cumpnl * 0.2 as cumpnl6,factor_val6 from factor_6
// 合并五个数据,形成多个列,用lj:lj(leftTable, rightTable, matchingCols, [rightMatchingCols], [leftFilter], [rightFilter])
f_1_5 = lj(f_1, f_2, `bar_endtime_flag, `bar_endtime_flag)
f_1_5 = lj(f_1_5, f_4, `bar_endtime_flag, `bar_endtime_flag)
f_1_5 = lj(f_1_5, f_8, `bar_endtime_flag, `bar_endtime_flag)
f_1_5 = lj(f_1_5, f_5, `bar_endtime_flag, `bar_endtime_flag)
f_1_5 = lj(f_1_5, f_6, `bar_endtime_flag, `bar_endtime_flag)

// // 计算总收益
// update f_1_5 set total_cumpnl = cumpnl1 + cumpnl2 + cumpnl4 + cumpnl8 + cumpnl5
// // 画图
// plot(f_1_5.total_cumpnl, f_1_5.bar_endtime_flag)
// ---------------------------------------------------------------------------------------------

ll = select open_time as bar_endtime_flag ,close, date(open_time) as settlement_date from btc_data 
factorData = lj(f_1_5, ll, `bar_endtime_flag, `bar_endtime_flag)
update factorData set factor_val_1 = factor_val1 * 0.2 + factor_val2 * 0.2 + factor_val4 * 0.10 + factor_val8 * 0.10 + factor_val5 * 0.4



update factorData set factor_val3 = nullFill( factor_val_1, 0.0) 
update factorData set holdingPnl = (Close)  / move(Close,1) - 1.0 
update factorData set symbolPnl = move(factor_val3, 2) *  holdingPnl
update factorData set totalPnl = sum(symbolPnl) context by bar_endtime_flag
update factorData set Position = move(factor_val3, 2) 
update factorData set PositionDiff = (move(factor_val3, 1) - move(factor_val3, 2)) 

// 回测
def stats_perf(perf_summary_daily_, year_){
    perf_summary_daily = select * from perf_summary_daily_
    if (year_ == 'all'){
        update perf_summary_daily set settlement_year = year_
        // print(perf_summary_daily_)
    }
    else{
        
        update perf_summary_daily set settlement_year = string(year(settlement_date))
        perf_summary_daily = select * from perf_summary_daily where settlement_year == (year_)
    }
        
    perf_stats = select string(first(settlement_year)) as year_, count(*) as days,
    round( iif(size(pnl_d) > 240, sum(pnl_d), mean(pnl_d) * 240) * 100 ,2) as ret, 
    round(mean(pnl_d) * 365 / (std(pnl_d) * 19), 2)  as sharp, 
    round( std(pnl_d) * 19 * 100.0, 2)  as std_,
    round(mean(holding_d)  * 100, 2) as holding,
    round(max(holdingMax_d)  * 100, 2) as holding_max,
    round(mean(turnover_d) * 100 , 2) as turnover ,
    round(mean(position_net_d) * 100 , 2) as position_net ,
    round(mean(pnl_d) / mean(turnover_d)  * 10000, 2) as "margin(bps)"
    from perf_summary_daily
    
    update perf_stats set ture_tr =round( (turnover / holding) * 100 , 2) , ture_position_net =  round(position_net / holding * 100 , 2)
    
    return perf_stats
}


perf_summary_hour  = select 
sum(nullFill(symbolPnl,0.0)) as pnl_h, 
sum(nullFill(abs(Position),0)) as holding_h,
sum(nullFill(abs(PositionDiff),0)) as turnover_h ,
sum(nullFill(iif(Position > 0, abs(Position) ,0 ),0)) -  sum(nullFill(iif(Position < 0,  abs(Position) ,0 ),0))  as position_net_h
from factorData  group by bar_endtime_flag ,settlement_date
perf_summary_d  = select 
sum(pnl_h) as pnl_d, 
mean(abs(holding_h)) as holding_d, 
max(abs(holding_h)) as holdingMax_d, 
sum(abs(turnover_h)) as turnover_d,
mean(position_net_h) as position_net_d  from perf_summary_hour  group by settlement_date 
stats_all = loop(stats_perf{perf_summary_d,},append!(string(sort(distinct(year(Tradingdays)))),'all'))

//统计结果
stats_all = stats_all.unionAll(false)

// pnl画图
myPnl = select  sum(symbolPnl) as pnl, last(settlement_date) as settlement_date from factorData group by bar_endtime_flag order by bar_endtime_flag
update myPnl set cumpnl = cumsum(pnl)  
plot(myPnl.cumpnl, myPnl.bar_endtime_flag)